<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ee9c8e7f-d114-4634-9006-d66b8ed7bed5" name="Changes" comment="Reflection API : 상세 학습 내용은 main 폴더 하위 resources 폴더 참고">
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/frontcontroller/FrontControllerWebServer.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/frontcontroller/mvc/DispatcherServlet.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/frontcontroller/mvc/RequestMappingHandlerMapping.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/frontcontroller/mvc/controller/Controller.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/frontcontroller/mvc/controller/HomeController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/logback.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/webapps/home.jsp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/servlet/CalculatorHttpServlet.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/servlet/CalculatorHttpServlet.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="was-calculator-pratice" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTTP Request" />
        <option value="JUnit5 Test Class" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2LrKp43oTXmMQtdzfLC4qhnM3ZC" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,
    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/jyuka/workspace/was-calculator-pratice/src/main/java/org/example/reflection&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.gradle&quot;,
    &quot;spring.configuration.checksum&quot;: &quot;c0c36e65895e3229901dfad72b4fef3f&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="org.example.jdbc" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/java/org/example/reflection" />
      <recent name="$PROJECT_DIR$/src/main/java/org/example/singletone" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/test/resources" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="org.example.jdbc" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="org.example.frontcontroller" />
      <recent name="org.example.reflection" />
      <recent name="org.example.servlet" />
    </key>
  </component>
  <component name="RunManager" selected="HTTP Request.test | #1">
    <configuration name="FrontControllerWebServer" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="org.example.frontcontroller.FrontControllerWebServer" />
      <module name="was-calculator-pratice.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.frontcontroller.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="test | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/test.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="ReflectionTest.controllerScan" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="was-calculator-pratice.test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.reflection.annotation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example.reflection" />
      <option name="MAIN_CLASS_NAME" value="org.example.reflection.ReflectionTest" />
      <option name="METHOD_NAME" value="controllerScan" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ReflectionTest.load" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="was-calculator-pratice.test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.reflection.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example.reflection" />
      <option name="MAIN_CLASS_NAME" value="org.example.reflection.ReflectionTest" />
      <option name="METHOD_NAME" value="load" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ReflectionTest.showClass" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="was-calculator-pratice.test" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.reflection.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example.reflection" />
      <option name="MAIN_CLASS_NAME" value="org.example.reflection.ReflectionTest" />
      <option name="METHOD_NAME" value="showClass" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.FrontControllerWebServer" />
        <item itemvalue="HTTP Request.test | #1" />
        <item itemvalue="JUnit.ReflectionTest.controllerScan" />
        <item itemvalue="JUnit.ReflectionTest.load" />
        <item itemvalue="JUnit.ReflectionTest.showClass" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task id="LOCAL-00001" summary="Step3 - Thread Pool을 적용해 안정적인 서비스가 가능하도록 한다..">
      <created>1676465873536</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1676465873536</updated>
    </task>
    <task active="true" id="Default" summary="Default task">
      <changelist id="ee9c8e7f-d114-4634-9006-d66b8ed7bed5" name="Changes" comment="Step3 - Thread Pool을 적용해 안정적인 서비스가 가능하도록 한다.." />
      <created>1676623940958</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1676623940958</updated>
      <workItem from="1676623942993" duration="97000" />
      <workItem from="1676625246337" duration="973000" />
      <workItem from="1676626229102" duration="7639000" />
      <workItem from="1676693199981" duration="25000" />
      <workItem from="1676800554848" duration="5614000" />
      <workItem from="1676894591568" duration="132000" />
      <workItem from="1676894752110" duration="2311000" />
      <workItem from="1676901711374" duration="10133000" />
    </task>
    <task id="LOCAL-00002" summary="Servlet Container 개념 학습&#10;- ServletContainer는 singletone으로 구성되었으며 singletone의 경우 상태를 유지(int count)를 유지해서는 안됨 -&gt; thread safe 하지 않음&#10;- 서블릿 컨테이너는 웹 서버와 소켓을 만들고 통신하는 과정을 대신 처리해준다. 개발&#10;  자는 비즈니스 로직에만 집중하면 된다.&#10;- Spring의 bean 또한 싱글톤으로 참고">
      <created>1676625669436</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1676625669436</updated>
    </task>
    <task id="LOCAL-00003" summary="내장톰캣 추가">
      <created>1676630687254</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1676630687254</updated>
    </task>
    <task id="LOCAL-00004" summary="Servlet, GenericServlet, HttpServlet 실습">
      <created>1676634487062</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1676634487062</updated>
    </task>
    <task id="LOCAL-00005" summary="URL 인코딩 (= 퍼센트 인코딩)&#10;• URL로 사용할 수 없는 문자(예약어, Non-ASCII 문자(한글) 등)를 사용할 수 있도록&#10;인코딩하는 것&#10;• 인코딩 된 문자는 triplet(세 개가 한 세트)로 인코딩 되며 각각을 % 다음에 두 개의&#10;16진수로 표현함&#10;• 예약 문자&#10;• https://ko.wikipedia.org/wiki/&#10;%ED%8D%BC%EC%84%BC%ED%8A%B8_%EC%9D%B8%EC%BD%9">
      <created>1676635009033</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1676635009033</updated>
    </task>
    <task id="LOCAL-00006" summary="JDBC : HikariCP의 DataSource 사용&#10;- 커넥션의 사용 주체는 WAS 스레드이므로 커넥션 개수는 WAS 스레드 수와 함께 고&#10;려해야 함&#10;- 커넥션 수 ↑ ,메모리 소모가 ↑, 동시 접속자 수가 많아지더라도 사용자 대기 시간이 ↓&#10;- 커넥션 수 ↓ ,메모리 소모가 ↓, 동시 접속자 수가 많아지더라도 사용자 대기 시간이 ↑">
      <created>1676806167338</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1676806167338</updated>
    </task>
    <task id="LOCAL-00007" summary="Reflection API : 상세 학습 내용은 main 폴더 하위 resources 폴더 참고">
      <created>1676989174218</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1676989174218</updated>
    </task>
    <option name="localTasksCounter" value="8" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Step3 - Thread Pool을 적용해 안정적인 서비스가 가능하도록 한다.." />
    <MESSAGE value="Servlet Container 개념 학습&#10;- ServletContainer는 singletone으로 구성되었으며 singletone의 경우 상태를 유지(int count)를 유지해서는 안됨 -&gt; thread safe 하지 않음&#10;- 서블릿 컨테이너는 웹 서버와 소켓을 만들고 통신하는 과정을 대신 처리해준다. 개발&#10;  자는 비즈니스 로직에만 집중하면 된다.&#10;- Spring의 bean 또한 싱글톤으로 참고" />
    <MESSAGE value="내장톰캣 추가" />
    <MESSAGE value="Servlet, GenericServlet, HttpServlet 실습" />
    <MESSAGE value="URL 인코딩 (= 퍼센트 인코딩)&#10;• URL로 사용할 수 없는 문자(예약어, Non-ASCII 문자(한글) 등)를 사용할 수 있도록&#10;인코딩하는 것&#10;• 인코딩 된 문자는 triplet(세 개가 한 세트)로 인코딩 되며 각각을 % 다음에 두 개의&#10;16진수로 표현함&#10;• 예약 문자&#10;• https://ko.wikipedia.org/wiki/&#10;%ED%8D%BC%EC%84%BC%ED%8A%B8_%EC%9D%B8%EC%BD%9" />
    <MESSAGE value="JDBC : HikariCP의 DataSource 사용&#10;- 커넥션의 사용 주체는 WAS 스레드이므로 커넥션 개수는 WAS 스레드 수와 함께 고&#10;려해야 함&#10;- 커넥션 수 ↑ ,메모리 소모가 ↑, 동시 접속자 수가 많아지더라도 사용자 대기 시간이 ↓&#10;- 커넥션 수 ↓ ,메모리 소모가 ↓, 동시 접속자 수가 많아지더라도 사용자 대기 시간이 ↑" />
    <MESSAGE value="Reflection API : 상세 학습 내용은 main 폴더 하위 resources 폴더 참고" />
    <option name="LAST_COMMIT_MESSAGE" value="Reflection API : 상세 학습 내용은 main 폴더 하위 resources 폴더 참고" />
  </component>
</project>